{"version":3,"sources":["pages/lecture/index.js","services/lecturesService/index.js","pages/quiz/index.js","pages/notChoosenLecture/index.js","services/authService/index.js","components/pieChart/index.js","components/Histogram/index.js","pages/answer/index.js","pages/lectures/index.js","pages/auth/authTemplate.js","pages/auth/index.js","redux/reducers/lectureReducer.js","redux/reducers/answerReducer.js","redux/reducers/index.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["Lecture","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onQuiz","onCurrentElementChange","state","lecture","_isEmpty","react_default","a","createElement","style","maxWidth","className","title","chapters","map","chapter","key","text","onClick","Component","connect","LecturesService","getLecture","lectureId","axios","get","concat","then","_ref","data","sendAnswer","session","post","objectSpread","params","_ref2","Quiz","onChangeAnswer","answerId","questionId","questions","some","question","setState","toConsumableArray","id","JSON","parse","localStorage","getItem","onAnswerChange","history","push","match","url","_this2","answers","answer","onChange","type","name","dispatch","item","NotChoosenLecture","render","AuthService","getSession","group","getProfile","_ref3","PieChart","width","size","height","radius","Math","min","color","d3","plusResult","result","results","minusResult","pie","value","d","sort","arc","innerRadius","outerRadius","pieChart","attr","append","datum","selectAll","enter","i","xmlns","ref","node","Histogram","margin","top","right","bottom","left","xAxisHeight","mainColor","update","bind","assertThisInitialized","x","y","histogram","prevProps","_this$props","chart","patientNodeColor","closestPatientNode","currentPatientValue","updatedChart","values","keys","e","count","showTooltip","tooltip","html","toFixed","bandwidth","identationToClosestRightChains","getBoundingClientRect","remove","svg","rangeRound","paddingInner","range","domain","nice","histogramTooltip","tickFormat","tickPadding","tickSize","ticks","xaxisLabel","yaxisLabel","chainGroup","rightRoundedRect","filter","each","chartTitle","titleContainer","Answer","length","Histogram_Histogram","statistics","Lectures","onLectureChange","currentElement","element","onExit","clear","replace","sessionId","_this3","_this$state","lectures","position","borderRight","backgroundColor","minWidth","paddingLeft","notChoosenLecture","pages_lecture","assign","quiz","pages_answer","AuthTemplate","_ref$formData","formData","formErrors","onSubmit","action","htmlFor","target","Auth","defineProperty","setItem","stringify","catch","error","console","log","response","authTemplate","lectureReducer","arguments","undefined","answerReducer","reducers","combineReducers","store","createStore","createBrowserHistory","WrappedApp","withRouter","Switch","Route","exact","path","auth","pages_lectures","Redirect","from","to","App","es","Router","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c33c748.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _isEmpty from 'lodash/isEmpty';\r\n\r\nclass Lecture extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    onQuiz = () => {\r\n        this.props.onCurrentElementChange('quiz');\r\n    };\r\n\r\n    render() {\r\n        const {lecture} = this.props;\r\n        return !_isEmpty(lecture)\r\n            ? <div style={{maxWidth: '1180px'}} className=\"column\">\r\n                <h2 className=\"title is-4\">{lecture.title}</h2>\r\n                {lecture.chapters.map((chapter) => (\r\n                    <div key={chapter.title} className=\"column\">\r\n                        <h2 className=\"subtitle is-5\">{chapter.title}</h2>\r\n                        <p>{chapter.text}</p>\r\n                    </div>\r\n                ))}\r\n                <div className=\"columns is-centered\">\r\n                    <div className=\"column is-2\">\r\n                        <button onClick={this.onQuiz} className=\"button is-link\">Пройти тест</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            : <div/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    lecture: state.lecture\r\n});\r\n\r\nexport default connect(mapStateToProps)(Lecture);\r\n","import axios from 'axios';\r\n\r\nclass LecturesService {\r\n    static getLecture = (lectureId) =>\r\n        axios.get(`/lectures/${lectureId}`)\r\n            .then(({data}) => data);\r\n\r\n    static sendAnswer = (session, data) => axios.post('/quizzes', {\r\n            ...data\r\n        },\r\n        {\r\n            params: {session}\r\n        })\r\n        .then(({data}) => data)\r\n}\r\n\r\nexport default LecturesService;","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport LecturesService from \"../../services/lecturesService\";\r\nimport _isEmpty from \"lodash/isEmpty\";\r\n\r\nclass Quiz extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            questions: []\r\n        };\r\n    }\r\n\r\n    onChangeAnswer = (answerId, questionId) => {\r\n        const result = this.state.questions.some(question => question.questionId === questionId);\r\n        if (result) {\r\n            this.setState({\r\n                questions: this.state.questions.map((question) =>\r\n                    question.questionId === questionId\r\n                        ? {answerId, questionId}\r\n                        : question)\r\n            })\r\n        } else {\r\n            this.setState({\r\n                questions: [\r\n                    ...this.state.questions, {\r\n                        answerId,\r\n                        questionId\r\n                    }\r\n                ]\r\n            })\r\n        }\r\n    };\r\n\r\n    onQuiz = () => {\r\n        const lectureId = this.props.lecture.id;\r\n        const session = JSON.parse(localStorage.getItem('education_recourse_session')).session;\r\n        const {questions} = this.state;\r\n\r\n        const data = {\r\n            lectureId,\r\n            questions\r\n        };\r\n\r\n        LecturesService.sendAnswer(session, data)\r\n            .then((data) => this.props.onAnswerChange(data))\r\n            .then(() => this.props.history.push(`${this.props.match.url}/answer`))\r\n            .then(()=> this.props.onCurrentElementChange('answer'));\r\n    };\r\n\r\n    render() {\r\n        const {lecture} = this.props;\r\n        return !_isEmpty(lecture)\r\n            ? <div className=\"column is-fullwidth\">\r\n                <h2 className=\"title is-4\">{lecture.title}</h2>\r\n                {lecture.questions.map((question) => (\r\n                    <div key={question.id} className=\"column\">\r\n                        <h2 className=\"subtitle is-5\">{`${question.id}. ${question.text}`}</h2>\r\n                        <div className=\"control\">\r\n                            <form>\r\n                                {question.answers.map((answer) =>\r\n                                    <label key={answer.id} className=\"radio\">\r\n                                        <input onChange={() => this.onChangeAnswer(answer.id, question.id)}\r\n                                               type=\"radio\" name=\"answer\"/>\r\n                                        {answer.text}\r\n                                    </label>\r\n                                )}\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                <button onClick={this.onQuiz} className=\"button is-link\">Пройти тест</button>\r\n            </div>\r\n            : <div/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    lecture: state.lecture\r\n});\r\n\r\nconst dispatchStateToProps = dispatch => ({\r\n    onAnswerChange: (answer) => {\r\n        dispatch({type: 'SET_ANSWER', item: answer})\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, dispatchStateToProps)(Quiz);\r\n","import React,{Component} from 'react';\r\n\r\nclass NotChoosenLecture extends Component{\r\n    render = () =>\r\n        <div className=\"columns is-fullheight is-fullwidth is-centered is-vcentered\">\r\n            <div className=\"column is-3\">\r\n                <h2 className=\"title is-4\">Choose lecture</h2>\r\n            </div>\r\n        </div>\r\n}\r\n\r\nexport default NotChoosenLecture;\r\n","import axios from \"axios\";\r\n\r\nclass AuthService {\r\n    static getSession = ({name, group}) => axios.post('/profiles', {\r\n        name, group\r\n    }).then(({data}) => data);\r\n\r\n    static getProfile = (session) => axios.get('/profiles', {\r\n        params: {session}\r\n    }).then(({data}) => data);\r\n}\r\n\r\nexport default AuthService;","import React, {Component} from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nclass PieChart extends Component {\r\n    componentDidMount() {\r\n        const rad = 12;\r\n        const width = this.props.size[0] / rad,\r\n            height = this.props.size[1] / rad,\r\n            radius = Math.min(width, height) / 2;\r\n        const color = d3.scaleOrdinal(d3.schemeCategory10);\r\n        const plusResult = this.props.result.results;\r\n        const minusResult = 5 - plusResult;\r\n\r\n        const pie = d3.pie()\r\n            .value(function (d) {\r\n                return d;\r\n            })\r\n            .sort(null);\r\n\r\n        const arc = d3.arc()\r\n            .innerRadius(radius - this.props.innerRadius / rad)\r\n            .outerRadius(radius - 20 / rad);\r\n\r\n        const svg = d3.select(this.pieChart)\r\n            .attr(\"width\", width)\r\n            .attr(\"height\", height)\r\n            .append(\"g\")\r\n            .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\r\n\r\n        svg\r\n            .datum([plusResult, minusResult])\r\n            .selectAll(\"path\")\r\n            .data(pie)\r\n            .enter().append(\"path\")\r\n            .attr(\"fill\", function (d, i) {\r\n                return color(i);\r\n            })\r\n            .attr(\"d\", arc);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" ref={node => (this.pieChart = node)}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PieChart;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as d3 from 'd3';\r\n// import './Histogram.css';\r\n\r\nexport default class Histogram extends Component {\r\n    static rightRoundedRect(x, y, width, height, radius) {\r\n        return `M${x},${y + height}v${radius\r\n        - height}a${radius},${radius} 0 0 1 ${radius},${-radius}h${width\r\n        - 2 * radius}a${radius},${radius} 0 0 1 ${radius},${radius}v${height - radius}h${width}z`;\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.margin = {\r\n            top: 20,\r\n            right: 50,\r\n            bottom: 50,\r\n            left: 50\r\n        };\r\n        this.xAxisHeight = 2;\r\n        this.mainColor = '#9fc4ee';\r\n        this.update = this.update.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {margin} = this;\r\n        this.width = 800\r\n        this.height = (this.width * 4) / 7 - this.margin.top - this.margin.bottom;\r\n        d3.select(this.histogram).style('width', `${this.width + margin.left}px`);\r\n        this.update();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps !== this.props) {\r\n            this.update();\r\n        }\r\n    }\r\n\r\n    update() {\r\n        const {\r\n            margin, width, height, xAxisHeight, mainColor\r\n        } = this;\r\n        const {\r\n            chart, patientNodeColor, closestPatientNode, currentPatientValue\r\n        } = this.props;\r\n\r\n        const updatedChart = {\r\n            values:\r\n                Object.keys(chart.values).map(e => ({\r\n                        value: e,\r\n                        count: chart.values[e]\r\n                    })\r\n                )\r\n        };\r\n\r\n        // gridlines in x axis function\r\n        function makeXGridlines() {\r\n            return d3\r\n                .axisBottom(x)\r\n                .tickFormat((d, i) => (i % 4 === 0 ? d : null))\r\n                .tickPadding(8);\r\n        }\r\n\r\n        // gridlines in y axis function\r\n        function makeYGridlines() {\r\n            return d3\r\n                .axisLeft(y)\r\n                .ticks(4)\r\n                .tickPadding(10);\r\n        }\r\n\r\n        function identationToClosestLeftChains(a) {\r\n            return a < x.bandwidth() * 5 ? 40 : 0;\r\n        }\r\n\r\n        function identationToClosestRightChains(a) {\r\n            return width - a < x.bandwidth() * 5 ? 40 : 0;\r\n        }\r\n\r\n        function showTooltip(d) {\r\n            tooltip\r\n                .html(\r\n                    `<span class=\"histogram__tooltip-amount\">${currentPatientValue.toFixed(3)}</span>\r\n          <span class=\"histogram__tooltip-row histogram__tooltip-title\">Current patient</span>`\r\n                )\r\n                .style(\r\n                    'left',\r\n                    `${x(d.value)\r\n                    + margin.left\r\n                    + identationToClosestLeftChains(x(d.value))\r\n                    + x.bandwidth() / 2\r\n                    - identationToClosestRightChains(x(d.value))\r\n                    + -tooltip.node().getBoundingClientRect().width / 2}px`\r\n                );\r\n        }\r\n\r\n        // clear before redrawing\r\n        d3.select(this.histogram)\r\n            .selectAll('*')\r\n            .remove();\r\n        // create chart\r\n        const svg = d3\r\n            .select(this.histogram)\r\n            .attr('width', width + margin.left + margin.right)\r\n            .attr('height', height + margin.top + margin.bottom)\r\n            .append('g')\r\n            .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n        const x = d3\r\n            .scaleBand()\r\n            .rangeRound([0, width])\r\n            .paddingInner(0.2);\r\n        const y = d3.scaleLinear().range([height, 0]);\r\n        x.domain(updatedChart.values.map(d => d.value));\r\n        y.domain([0, d3.max(updatedChart.values, d => d.count)]).nice();\r\n        const tooltip = d3.select(this.histogramTooltip);\r\n\r\n        // add the X gridlines\r\n        svg\r\n            .append('g')\r\n            .attr('class', 'grid')\r\n            .attr('transform', `translate(0,${height})`)\r\n            .call(makeXGridlines().tickSize(5));\r\n\r\n        // add the Y gridlines\r\n        svg\r\n            .append('g')\r\n            .attr('class', 'grid')\r\n            .call(makeYGridlines().tickSize(-width));\r\n\r\n        svg\r\n            .append('text')\r\n            .attr('class', 'axis-title')\r\n            .attr('x', width / 2)\r\n            .attr('y', height)\r\n            .attr('dy', '2.75em')\r\n            .style('text-anchor', 'middle')\r\n            .text(updatedChart.xaxisLabel);\r\n\r\n        svg\r\n            .append('text')\r\n            .attr('class', 'axis-title')\r\n            .attr('transform', 'rotate(-90)')\r\n            .attr('y', -margin.left)\r\n            .attr('x', -height / 2)\r\n            .attr('dy', '1em')\r\n            .style('text-anchor', 'middle')\r\n            .text(updatedChart.yaxisLabel);\r\n\r\n        const chainGroup = svg\r\n            .append('g')\r\n            .selectAll('g')\r\n            .data(updatedChart.values)\r\n            .enter()\r\n            .append('g')\r\n            .attr('class', 'histogram__chain-group');\r\n\r\n        chainGroup\r\n            .append('path')\r\n            .attr('class', 'histogram__background-bar')\r\n            .attr('d', d => Histogram.rightRoundedRect(x(d.value), y(d.count), x.bandwidth(), height - y(d.count), 3))\r\n            .attr('fill', '#ffffff');\r\n\r\n        // append the rectangles for the bar chart\r\n        chainGroup\r\n            .append('path')\r\n            .attr('class', 'histogram__bar')\r\n            .attr('d', d => Histogram.rightRoundedRect(x(d.value), y(d.count), x.bandwidth(), height - y(d.count), 3))\r\n            .attr('fill', d => (d.value === closestPatientNode.value ? patientNodeColor : mainColor))\r\n            .style('opacity', 0.75);\r\n\r\n        chainGroup\r\n            .filter(d => d.value === closestPatientNode.value)\r\n            .append('line')\r\n            .attr('stroke', '#1b2834')\r\n            .attr('stroke-dasharray', 6)\r\n            .attr('x1', d => x(d.value) + x.bandwidth() / 2)\r\n            .attr('y1', -20)\r\n            .attr('x2', d => x(d.value) + x.bandwidth() / 2)\r\n            .attr('y2', d => y(d.count))\r\n            .each((d) => {\r\n                showTooltip(d);\r\n            });\r\n\r\n        // add the X Axis\r\n        svg\r\n            .append('rect')\r\n            .attr('transform', `translate(0,${height})`)\r\n            .attr('width', width)\r\n            .attr('height', xAxisHeight)\r\n            .attr('fill', '#9bbce6');\r\n    }\r\n\r\n    render() {\r\n        const {chartTitle} = this.props;\r\n        return (\r\n            <div className=\"histogram\">\r\n                <div className=\"histogram__title-container\" ref={node => (this.titleContainer = node)}>\r\n                    <div className=\"histogram__title\">{chartTitle}</div>\r\n                </div>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" ref={node => (this.histogram = node)}/>\r\n                <div className=\"histogram__tooltip\" ref={node => (this.histogramTooltip = node)}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHistogram.propTypes = {\r\n    chart: PropTypes.shape({\r\n        values: PropTypes.array.isRequired,\r\n        xaxisLabel: PropTypes.string.isRequired,\r\n        yaxisLabel: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    closestPatientNode: PropTypes.shape({\r\n        count: PropTypes.number,\r\n        value: PropTypes.number\r\n    }).isRequired,\r\n    patientNodeColor: PropTypes.string.isRequired,\r\n    currentPatientValue: PropTypes.number.isRequired,\r\n    chartTitle: PropTypes.string.isRequired\r\n};","import React from \"react\";\r\nimport {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport PieChart from \"../../components/pieChart\";\r\nimport Histogram from \"../../components/Histogram\";\r\n\r\nclass Answer extends Component {\r\n    render() {\r\n        return <div className=\"column is-fullwidth\">\r\n            <PieChart size={[5000, 5000]} innerRadius={250}\r\n                      result={{results: this.props.answer.results.filter(value => value === true).length}}/>\r\n            <div className=\"biomarkers-details-page__section\">\r\n                <Histogram chart={{\r\n                    values: this.props.answer.statistics\r\n                }}\r\n                           closestPatientNode={1}\r\n                           patientNodeColor={1}\r\n                           currentPatientValue={1}\r\n                           chartTitle={'Students results'}\r\n                />\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    answer: state.answer\r\n});\r\n\r\nexport default connect(mapStateToProps)(Answer);\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport _isEmpty from 'lodash/isEmpty';\r\nimport Lecture from \"../lecture\";\r\nimport Quiz from \"../quiz\";\r\nimport NotChoosenLecture from \"../notChoosenLecture\";\r\nimport AuthService from \"../../services/authService\";\r\nimport PieChart from \"../../components/pieChart\";\r\nimport LecturesService from \"../../services/lecturesService\";\r\nimport Answer from \"../answer\";\r\n\r\nclass Lectures extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {sessionId} = this.props.match.params;\r\n        AuthService.getProfile(sessionId)\r\n            .then((data) =>\r\n                this.setState({...data, currentElement: 'not-chosen'})\r\n            );\r\n    }\r\n\r\n    onLectureChange = (lectureId) => {\r\n        LecturesService.getLecture(lectureId)\r\n            .then((data) => {\r\n                    this.props.onLectureChange({...data, id: lectureId});\r\n                    this.setState({currentElement: 'lecture'})\r\n                }\r\n            )\r\n            .then(() => this.props.history.push(`${this.props.match.url}/lecture/${lectureId}`));\r\n    };\r\n\r\n    onCurrentElementChange = (element) => {\r\n        this.setState({\r\n            currentElement: element\r\n        })\r\n    };\r\n\r\n    onExit = () => {\r\n        localStorage.clear();\r\n        this.props.history.replace(\"/auth\", null);\r\n    };\r\n\r\n    render() {\r\n        const {name, group, lectures, currentElement} = this.state;\r\n        return <div style={{position: 'absolute'}} className=\"columns\">\r\n            <aside style={{\r\n                borderRight: '1px solid #303f9f',\r\n                backgroundColor: 'rgb(244, 245, 247)',\r\n                minWidth: '200px',\r\n                maxWidth: '200px'\r\n            }}\r\n                   className=\"menu column is-fullheight\">\r\n                <div className=\"column\">\r\n                    <h2 className=\"title is-5\">{!_isEmpty(name) && name}</h2>\r\n                    <h2 className=\"subtitle is-6\">{!_isEmpty(group) && group}</h2>\r\n                    <button onClick={this.onExit} className=\"button is-small\">Выйти</button>\r\n                </div>\r\n                <p className=\"menu-label column is-centered\">\r\n                    Лекции\r\n                </p>\r\n                <ul className=\"menu-list\">\r\n                    {!_isEmpty(lectures) && lectures.map((lecture) =>\r\n                        (\r\n                            <li key={lecture.id}>\r\n                                <a\r\n                                    onClick={() => this.onLectureChange(lecture.id)}\r\n                                    style={{paddingLeft: '30px'}}\r\n                                    className=\"columns\">\r\n                                    <PieChart size={[500,500]} innerRadius={100} result={{\r\n                                        results: lecture.result\r\n                                    }}/>\r\n                                    <p className=\"column\">{lecture.title}</p>\r\n                                </a>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </aside>\r\n            {currentElement === 'not-chosen' && <NotChoosenLecture/>}\r\n            {currentElement === 'lecture' &&\r\n            <Lecture {...this.props}\r\n                     onCurrentElementChange={this.onCurrentElementChange}/>}\r\n            {currentElement === 'quiz' && <Quiz {...this.props} onCurrentElementChange={this.onCurrentElementChange}/>}\r\n            {currentElement === 'answer' && <Answer {...this.props} onCurrentElementChange={this.onCurrentElementChange}/>}\r\n        </div>\r\n    }\r\n}\r\n\r\nconst dispatchStateToProps = dispatch => ({\r\n    onLectureChange: (lecture) => {\r\n        dispatch({type: 'SET_LECTURE', item: lecture})\r\n    }\r\n});\r\n\r\nexport default connect(null, dispatchStateToProps)(Lectures);\r\n","import React from 'react';\r\n\r\nconst AuthTemplate = ({formData: {name, group}, formErrors, onChange, onSubmit}) => {\r\n    return (\r\n        <div style={{position:'absolute'}} className=\"columns is-fullheight is-fullwidth is-centered is-vcentered\">\r\n            <form className=\"column is-4\" action=\"submit\">\r\n                <h2 className=\"title has-text-centered\">The Education Recourse</h2>\r\n                <label className=\"label\" htmlFor=\"name\">\r\n                    Name\r\n                    <input className=\"input\" value={name} name=\"name\" onChange={({target}) => onChange(target)}\r\n                           type=\"text\"/>\r\n                </label>\r\n                <label className=\"label\" htmlFor=\"group\">\r\n                    Group\r\n                    <input className=\"input\" value={group} name=\"group\"\r\n                           onChange={({target}) => onChange(target)}\r\n                           type=\"text\"/>\r\n                </label>\r\n                <button type=\"button\" className=\"button is-fullwidth is-link\" onClick={onSubmit}>Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthTemplate;\r\n","import React, {Component} from 'react';\r\nimport AuthTemplate from \"./authTemplate\";\r\nimport AuthService from \"../../services/authService\";\r\n\r\nclass Auth extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            formData: {\r\n                name: '',\r\n                group: ''\r\n            },\r\n            formErrors: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            const session = JSON.parse(localStorage.getItem('education_recourse_session')).session;\r\n            this.props.history.push(`/lectures/${session}`);\r\n        }\r\n        catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    onChange = ({name, value}) => {\r\n        this.setState({\r\n            formData: {...this.state.formData, [name]: value}\r\n        });\r\n    };\r\n\r\n    onSubmit = () => {\r\n        const {formData} = this.state;\r\n        AuthService.getSession(formData)\r\n            .then((data) => {\r\n                localStorage.setItem('education_recourse_session', JSON.stringify(data));\r\n                this.props.history.push(`/lectures/${data.session}`);\r\n            })\r\n            .catch(error => console.log(error.response.data));\r\n    };\r\n\r\n    render() {\r\n        const {formData, formErrors} = this.state;\r\n        return <AuthTemplate\r\n            formData={formData}\r\n            formErrors={formErrors}\r\n            onChange={this.onChange}\r\n            onSubmit={this.onSubmit}\r\n        />\r\n    }\r\n}\r\n\r\nexport default Auth;\r\n","const lectureReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'SET_LECTURE':\r\n            return {...state, ...action.item};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default lectureReducer;","const answerReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'SET_ANSWER':\r\n            return {...state, ...action.item};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default answerReducer;","import {combineReducers} from 'redux';\r\nimport lectureReducer from \"./lectureReducer\";\r\nimport answerReducer from \"./answerReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    lecture: lectureReducer,\r\n    answer: answerReducer\r\n});\r\n\r\nexport default reducers;","import {createStore} from 'redux';\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\r\nimport {Provider} from \"react-redux\";\r\nimport {Router, Redirect, Route, Switch, withRouter,} from 'react-router';\r\nimport {createBrowserHistory} from \"history\";\r\nimport Lectures from \"./pages/lectures\";\r\nimport Auth from \"./pages/auth\";\r\nimport store from \"./redux/store\";\r\nimport 'bulma/css/bulma.css';\r\nimport './App.css';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst Application = () =>\r\n    <Switch>\r\n        <Route\r\n            exact={true}\r\n            path=\"/auth\"\r\n            render={props => (\r\n                <Auth {...props}/>\r\n            )}\r\n        />\r\n        <Route\r\n            path=\"/lectures/:sessionId\"\r\n            render={props =>\r\n                <Lectures {...props}/>\r\n            }\r\n        />\r\n        <Redirect from=\"/\" to=\"/auth\"/>\r\n    </Switch>;\r\n\r\nconst App = () =>\r\n    <Provider store={store}>\r\n        <Router history={history}>\r\n            <WrappedApp/>\r\n        </Router>\r\n    </Provider>;\r\n\r\nconst WrappedApp = withRouter(Application);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}